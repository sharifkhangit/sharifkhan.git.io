{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-employee/add-employee.component.ts","webpack:///src/app/add-employee/add-employee.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/employee-details/employee-details.component.ts","webpack:///src/app/employee-details/employee-details.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/layout/header-nav/header-nav.component.ts","webpack:///src/app/layout/header-nav/header-nav.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/sidebar/sidebar.component.ts","webpack:///src/app/layout/sidebar/sidebar.component.html","webpack:///src/app/services/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddEmployeeComponent","_fb","service","ngZone","mapsAPILoader","router","showWebcam","allowCameraSwitch","multipleWebcamsAvailable","facingMode","errors","webcamImage","trigger","nextWebcam","getPosition","pos","console","log","latitude","lat","longitude","lng","location","_empForm","get","setValue","updateValueAndValidity","initializeEmpForm","group","required","load","autocomplete","google","maps","places","Autocomplete","searchElementRef","nativeElement","addListener","run","place","getPlace","address","formatted_address","web_site","website","name","zip_code","address_components","length","long_name","geometry","zoom","values","saveDetails","subscribe","data","navigate","event","file","target","files","reader","FileReader","readAsDataURL","onload","result","disable","next","imageAsDataUrl","asObservable","onSubmit","handleUpload","openWebCam","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","apiKey","declarations","providers","bootstrap","EmployeeDetailsComponent","route","empDetails","queryParams","params","queryParam","getEmpDetails","USERID","getEmployeeDetails","res","EmployeeListComponent","employeeList","getEmployeeList","employee","addEmployeeShow","HeaderNavComponent","LayoutComponent","SidebarComponent","EmployeeService","http","reject","navigator","geolocation","getCurrentPosition","resp","coords","err","post","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeService } from './../services/employee.service';\nimport { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MapsAPILoader } from '@agm/core';\nimport { WebcamImage, WebcamInitError } from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.scss']\n})\nexport class AddEmployeeComponent implements OnInit {\n  @ViewChild(\"search\")\n  public searchElementRef: ElementRef;\n  _empForm: FormGroup;\n  location;\n  latitude: number;\n  longitude: number;\n  zoom: number;\n  zip_code: string;\n  name: string;\n  web_site: string;\n  address: string;\n\n  public showWebcam = false;\n  public allowCameraSwitch = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public facingMode: string = 'environment';\n  public errors: WebcamInitError[] = [];\n\n  // latest snapshot\n  public webcamImage: WebcamImage = null;\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n  private nextWebcam: Subject<boolean | string> = new Subject<boolean | string>()\n  constructor(private _fb: FormBuilder, private service: EmployeeService, private ngZone: NgZone,\n    private mapsAPILoader: MapsAPILoader, private router: Router) {\n  }\n\n\n  ngOnInit(): void {\n    this.service.getPosition().then(pos => {\n      console.log(pos)\n      this.latitude = pos.lat;\n      this.longitude = pos.lng\n      this.location = `${'lng:' + pos.lng} ${'lat:' + pos.lat}`\n      this._empForm.get('location').setValue(this.location)\n      this._empForm.updateValueAndValidity()\n      console.log(this.location)\n    });\n    this.initializeEmpForm()\n  }\n\n  initializeEmpForm() {\n    this._empForm = this._fb.group(\n      {\n        'name': ['', [Validators.required]],\n        'phone': ['', [Validators.required]],\n        'email': ['', [Validators.required]],\n        'location': [this.location, []],\n        'address': ['', []],\n        'profile-image': [],\n        'image': []\n      }\n    )\n  }\n\n  findAdress() {\n    debugger\n    this.mapsAPILoader.load().then(() => {\n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement);\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          // some details\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          this.address = place.formatted_address;\n          this.web_site = place.website;\n          this.name = place.name;\n          this.zip_code = place.address_components[place.address_components.length - 1].long_name;\n          //set latitude, longitude and zoom\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n        });\n      });\n    });\n  }\n\n  onSubmit(values) {\n    this.service.saveDetails(values).subscribe(data => {\n      console.log(data)\n      this.router.navigate(['employee-list'])\n    })\n  }\n\n  handleUpload(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      console.log(reader.result);\n      this._empForm.get('image').setValue(reader.result)\n    };\n  }\n\n  openWebCam() {\n    this.showWebcam = !this.showWebcam\n    this.webcamImage = null\n    if (this.showWebcam) {\n      this._empForm.get('image').setValue('');\n      this._empForm.get('profile-image').setValue('');\n      this._empForm.get('profile-image').disable()\n    }\n  };\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    console.log('received webcam image', webcamImage);\n    this.webcamImage = webcamImage;\n    this._empForm.get('imgage').setValue(webcamImage.imageAsDataUrl)\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n}\n","<div class=\"card mt-3 col-md-6 offset-3\">\n    <h5 class=\"card-header info-color white-text text-center py-4\">\n        <strong>Add Employee</strong>\n    </h5>\n    <div class=\"card-body px-lg-5 pt-3\">\n        <form style=\"color: #757575;\" [formGroup]=\"_empForm\" (ngSubmit)=\"onSubmit(_empForm.value)\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Name</label>\n\n                    <input type=\"text\" id=\"name\" class=\"form-control\" name=\"name\" formControlName='name'>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n\n                    <input type=\"email\" id=\"email\" class=\"form-control\" name=\"email\" formControlName='email'>\n                </div>\n\n            </div>\n            <div class=\"col-md-12\">\n\n                <div class=\"form-group\">\n                    <label for=\"phone\">Phone Number</label>\n\n                    <input type=\"text\" id=\"phone\" class=\"form-control\" name=\"phone\" formControlName=\"phone\">\n\n                </div>\n\n            </div>\n            <div class=\"col-md-12\">\n\n                <div class=\"form-group\">\n                    <label for=\"image\">Profile Image</label>\n\n                    <input type=\"file\" id=\"image\" class=\"form-control\" name=\"image\" formControlName=\"profile-image\" (change)=\"handleUpload($event)\">\n\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <webcam [height]=\"205\" [width]=\"600\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\" [allowCameraSwitch]=\"allowCameraSwitch\" [imageQuality]=\"1\"></webcam>\n                        <a class=\"btn btn-info btn-sm\" (click)=\"openWebCam();\">Capture</a>\n                        <a class=\"btn btn primary btn-sm\" *ngIf=\"showWebcam\" (click)=\"triggerSnapshot();\">Take A Snapshot</a>\n                    </div>\n                    <div class=\"snapshot col-md-6 \" *ngIf=\"webcamImage\">\n                        <h2>Nice one!</h2>\n                        <img width=\"270px\" height=\"160px\" [src]=\"webcamImage.imageAsDataUrl\" />\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-md-12\">\n\n                <div class=\"form-group\">\n                    <label for=\"location\">Current location/Lat long</label>\n\n                    <input type=\"text\" id=\"location\" class=\"form-control\" name=\"location\" formControlName='location'>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label for=\"address\">Address</label>\n\n                    <input type=\"text\" id=\"address\" class=\"form-control\" name=\"address\" formControlName=\"address\">\n                </div>\n            </div>\n            <button class=\"btn btn-primary float-right\" type=\"submit\" [disabled]=\"!_empForm.valid\">Submit</button>\n        </form>\n    </div>\n</div>","import { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\n\nconst routes: Routes = [{ path: '', redirectTo: 'employee-list', pathMatch: 'full' },\n{ path: 'employee-list', component: EmployeeListComponent },\n{ path: 'employee-details', component: EmployeeDetailsComponent },\n{ path: 'employee-add', component: AddEmployeeComponent }\n\n\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'employeeDetails';\n}\n","<app-layout></app-layout>","import { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderNavComponent } from './layout/header-nav/header-nav.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WebcamModule } from 'ngx-webcam';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddEmployeeComponent,\n    EmployeeListComponent,\n    EmployeeDetailsComponent,\n    LayoutComponent,\n    HeaderNavComponent,\n    SidebarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      // please get your own API key here:\n      // https://developers.google.com/maps/documentation/javascript/get-api-key?hl=en\n      apiKey: 'AIzaSyBioAUJeBKIWKzR5G5WzfpmvBskozcjXpw'\n\n    }),\n    HttpClientModule,\n    WebcamModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EmployeeService } from './../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  constructor(private service: EmployeeService, private route: ActivatedRoute) { }\n  queryParam;\n  empDetails: any = {}\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.queryParam = params['USERID'];\n      this.getEmpDetails(this.queryParam)\n    });\n  }\n\n  getEmpDetails(USERID) {\n    this.service.getEmployeeDetails(USERID).subscribe(res => {\n      console.log(res)\n      this.empDetails = res[0]\n    })\n  }\n\n  lat = 51.678418;\n  lng = 7.809007;\n\n}\n","<div class=\"row mt-3\">\n    <div class=\"card col-md-8 offset-2 p-3\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-auto\">\n                <img width=\"300px\" src=\"{{empDetails.image}}\" class=\"img-fluid\" alt=\"\">\n            </div>\n            <div class=\"col\">\n                <div class=\"card-block px-2\">\n                    <h4 class=\"card-title text-capitalize text-lg-left\"> Employee Name : {{empDetails.name}}</h4>\n                    <p class=\"card-text\"> Email : {{empDetails.email}}</p>\n                    <p class=\"card-text\">Phone Number :{{empDetails.phone}}</p>\n                    <p class=\"card-text\">Address :{{empDetails.address}}</p>\n                    <a class=\"btn btn-primary btn-sm\">Edit Profile</a>\n                    <a class=\"btn btn-info btn-sm\" routerLink='/employee-list'>Back</a>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer w-100 text-muted\">\n            <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\n                <agm-marker [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n            </agm-map>\n        </div>\n    </div>\n</div>","import { EmployeeService } from './../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  constructor(private router: Router, private service: EmployeeService) { }\n  employeeList: any = []\n  ngOnInit(): void {\n    this.service.getPosition().then(pos => {\n      console.log(`${pos.lng} ${pos.lat}`);\n    });\n\n    this.service.getEmployeeList().subscribe(res => {\n      console.log(res)\n      this.employeeList = res;\n    })\n  }\n  addEmployeeShow() {\n    this.router.navigate(['employee-add'])\n  }\n\n  getEmpDetails(employee) {\n    this.router.navigate(['employee-details'], { queryParams: { USERID: employee.id } });\n  }\n}\n","<div class=\"row mt-3\">\n    <div class=\"col-md-12\">\n        <button class=\"btn btn-info float-right\" (click)=\"addEmployeeShow()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add</button>\n    </div>\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone Number</th>\n                <th>Location</th>\n                <th>Profile Image</th>\n                <th>Address</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of employeeList\">\n                <td><a class=\"btn btn-link text-info\" (click)=\"getEmpDetails(item)\">{{item.name}}</a></td>\n                <td>{{item.email}}</td>\n                <td>{{item.phone}}</td>\n                <td>{{item.location}}</td>\n                <td><img src=\"{{item.image}}\" class=\"img-thumbnail\" width=\"70px\" alt=\"\"></td>\n                <td>{{item.address}}</td>\n\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-nav',\n  templateUrl: './header-nav.component.html',\n  styleUrls: ['./header-nav.component.scss']\n})\nexport class HeaderNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand primary\">\n    <div class=\"container-fluid \">\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand text-white\">PaceWisdom</a>\n        </div>\n        <ul class=\"nav navbar-nav\">\n\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <app-header-nav style=\"width: 100%;\"> </app-header-nav>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <router-outlet> </router-outlet>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>sidebar works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  getPosition(): Promise<any> {\n    return new Promise((resolve, reject) => {\n\n      navigator.geolocation.getCurrentPosition(resp => {\n\n        resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n      },\n        err => {\n          reject(err);\n        });\n    });\n\n  }\n  getEmployeeList() {\n    return this.http.get('https://5f8ac4f384531500167061ed.mockapi.io/employee/employee')\n  }\n\n  saveDetails(values) {\n    return this.http.post('https://5f8ac4f384531500167061ed.mockapi.io/employee/employee', values)\n  }\n  getEmployeeDetails(id) {\n    return this.http.get('https://5f8ac4f384531500167061ed.mockapi.io/employee/employee?id=' + id)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}