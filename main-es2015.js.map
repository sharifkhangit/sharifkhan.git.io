{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-employee/add-employee.component.ts","./src/app/add-employee/add-employee.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee-details/employee-details.component.ts","./src/app/employee-details/employee-details.component.html","./src/app/employee-list/employee-list.component.ts","./src/app/employee-list/employee-list.component.html","./src/app/layout/header-nav/header-nav.component.ts","./src/app/layout/header-nav/header-nav.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/layout/sidebar/sidebar.component.ts","./src/app/layout/sidebar/sidebar.component.html","./src/app/services/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeService } from './../services/employee.service';\nimport { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MapsAPILoader } from '@agm/core';\nimport { WebcamImage, WebcamInitError } from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.scss']\n})\nexport class AddEmployeeComponent implements OnInit {\n  @ViewChild(\"search\")\n  public searchElementRef: ElementRef;\n  _empForm: FormGroup;\n  location;\n  latitude: number;\n  longitude: number;\n  zoom: number;\n  zip_code: string;\n  name: string;\n  web_site: string;\n  address: string;\n\n  public showWebcam = false;\n  public allowCameraSwitch = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public facingMode: string = 'environment';\n  public errors: WebcamInitError[] = [];\n\n  // latest snapshot\n  public webcamImage: WebcamImage = null;\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n  private nextWebcam: Subject<boolean | string> = new Subject<boolean | string>()\n  constructor(private _fb: FormBuilder, private service: EmployeeService, private ngZone: NgZone,\n    private mapsAPILoader: MapsAPILoader, private router: Router) {\n  }\n\n\n  ngOnInit(): void {\n    this.service.getPosition().then(pos => {\n      console.log(pos)\n      this.latitude = pos.lat;\n      this.longitude = pos.lng\n      this.location = `${'lng:' + pos.lng} ${'lat:' + pos.lat}`\n      this._empForm.get('location').setValue(this.location)\n      this._empForm.updateValueAndValidity()\n      console.log(this.location)\n    });\n    this.initializeEmpForm()\n  }\n\n  initializeEmpForm() {\n    this._empForm = this._fb.group(\n      {\n        'name': ['', [Validators.required]],\n        'phone': ['', [Validators.required]],\n        'email': ['', [Validators.required]],\n        'location': [this.location, []],\n        'address': ['', []],\n        'profile-image': [],\n        'image': []\n      }\n    )\n  }\n\n  findAdress() {\n    debugger\n    this.mapsAPILoader.load().then(() => {\n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement);\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          // some details\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          this.address = place.formatted_address;\n          this.web_site = place.website;\n          this.name = place.name;\n          this.zip_code = place.address_components[place.address_components.length - 1].long_name;\n          //set latitude, longitude and zoom\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n        });\n      });\n    });\n  }\n\n  onSubmit(values) {\n    this.service.saveDetails(values).subscribe(data => {\n      console.log(data)\n      this.router.navigate(['employee-list'])\n    })\n  }\n\n  handleUpload(event) {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      console.log(reader.result);\n      this._empForm.get('image').setValue(reader.result)\n    };\n  }\n\n  openWebCam() {\n    this.showWebcam = !this.showWebcam\n    this.webcamImage = null\n    if (this.showWebcam) {\n      this._empForm.get('image').setValue('');\n      this._empForm.get('profile-image').setValue('');\n      this._empForm.get('profile-image').disable()\n    }\n  };\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    console.log('received webcam image', webcamImage);\n    this.webcamImage = webcamImage;\n    this._empForm.get('imgage').setValue(webcamImage.imageAsDataUrl)\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n}\n","<div class=\"card mt-3 col-md-6 offset-3\">\n    <h5 class=\"card-header info-color white-text text-center py-4\">\n        <strong>Add Employee</strong>\n    </h5>\n    <div class=\"card-body px-lg-5 pt-3\">\n        <form style=\"color: #757575;\" [formGroup]=\"_empForm\" (ngSubmit)=\"onSubmit(_empForm.value)\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Name</label>\n\n                    <input type=\"text\" id=\"name\" class=\"form-control\" name=\"name\" formControlName='name'>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n\n                    <input type=\"email\" id=\"email\" class=\"form-control\" name=\"email\" formControlName='email'>\n                </div>\n\n            </div>\n            <div class=\"col-md-12\">\n\n                <div class=\"form-group\">\n                    <label for=\"phone\">Phone Number</label>\n\n                    <input type=\"text\" id=\"phone\" class=\"form-control\" name=\"phone\" formControlName=\"phone\">\n\n                </div>\n\n            </div>\n            <div class=\"col-md-12\">\n\n                <div class=\"form-group\">\n                    <label for=\"image\">Profile Image</label>\n\n                    <input type=\"file\" id=\"image\" class=\"form-control\" name=\"image\" formControlName=\"profile-image\" (change)=\"handleUpload($event)\">\n\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <webcam [height]=\"205\" [width]=\"600\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\" [allowCameraSwitch]=\"allowCameraSwitch\" [imageQuality]=\"1\"></webcam>\n                        <a class=\"btn btn-info btn-sm\" (click)=\"openWebCam();\">Capture</a>\n                        <a class=\"btn btn primary btn-sm\" *ngIf=\"showWebcam\" (click)=\"triggerSnapshot();\">Take A Snapshot</a>\n                    </div>\n                    <div class=\"snapshot col-md-6 \" *ngIf=\"webcamImage\">\n                        <h2>Nice one!</h2>\n                        <img width=\"270px\" height=\"160px\" [src]=\"webcamImage.imageAsDataUrl\" />\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col-md-12\">\n\n                <div class=\"form-group\">\n                    <label for=\"location\">Current location/Lat long</label>\n\n                    <input type=\"text\" id=\"location\" class=\"form-control\" name=\"location\" formControlName='location'>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label for=\"address\">Address</label>\n\n                    <input type=\"text\" id=\"address\" class=\"form-control\" name=\"address\" formControlName=\"address\">\n                </div>\n            </div>\n            <button class=\"btn btn-primary float-right\" type=\"submit\" [disabled]=\"!_empForm.valid\">Submit</button>\n        </form>\n    </div>\n</div>","import { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\n\n\nconst routes: Routes = [{ path: '', redirectTo: 'employee-list', pathMatch: 'full' },\n{ path: 'employee-list', component: EmployeeListComponent },\n{ path: 'employee-details', component: EmployeeDetailsComponent },\n{ path: 'employee-add', component: AddEmployeeComponent }\n\n\n]\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'employeeDetails';\n}\n","<app-layout></app-layout>","import { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderNavComponent } from './layout/header-nav/header-nav.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WebcamModule } from 'ngx-webcam';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddEmployeeComponent,\n    EmployeeListComponent,\n    EmployeeDetailsComponent,\n    LayoutComponent,\n    HeaderNavComponent,\n    SidebarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      // please get your own API key here:\n      // https://developers.google.com/maps/documentation/javascript/get-api-key?hl=en\n      apiKey: 'AIzaSyBioAUJeBKIWKzR5G5WzfpmvBskozcjXpw'\n\n    }),\n    HttpClientModule,\n    WebcamModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EmployeeService } from './../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  constructor(private service: EmployeeService, private route: ActivatedRoute) { }\n  queryParam;\n  empDetails: any = {}\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.queryParam = params['USERID'];\n      this.getEmpDetails(this.queryParam)\n    });\n  }\n\n  getEmpDetails(USERID) {\n    this.service.getEmployeeDetails(USERID).subscribe(res => {\n      console.log(res)\n      this.empDetails = res[0]\n    })\n  }\n\n  lat = 51.678418;\n  lng = 7.809007;\n\n}\n","<div class=\"row mt-3\">\n    <div class=\"card col-md-8 offset-2 p-3\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-auto\">\n                <img width=\"300px\" src=\"{{empDetails.image}}\" class=\"img-fluid\" alt=\"\">\n            </div>\n            <div class=\"col\">\n                <div class=\"card-block px-2\">\n                    <h4 class=\"card-title text-capitalize text-lg-left\"> Employee Name : {{empDetails.name}}</h4>\n                    <p class=\"card-text\"> Email : {{empDetails.email}}</p>\n                    <p class=\"card-text\">Phone Number :{{empDetails.phone}}</p>\n                    <p class=\"card-text\">Address :{{empDetails.address}}</p>\n                    <a class=\"btn btn-primary btn-sm\">Edit Profile</a>\n                    <a class=\"btn btn-info btn-sm\" routerLink='/employee-list'>Back</a>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer w-100 text-muted\">\n            <agm-map [latitude]=\"lat\" [longitude]=\"lng\">\n                <agm-marker [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n            </agm-map>\n        </div>\n    </div>\n</div>","import { EmployeeService } from './../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  constructor(private router: Router, private service: EmployeeService) { }\n  employeeList: any = []\n  ngOnInit(): void {\n    this.service.getPosition().then(pos => {\n      console.log(`${pos.lng} ${pos.lat}`);\n    });\n\n    this.service.getEmployeeList().subscribe(res => {\n      console.log(res)\n      this.employeeList = res;\n    })\n  }\n  addEmployeeShow() {\n    this.router.navigate(['employee-add'])\n  }\n\n  getEmpDetails(employee) {\n    this.router.navigate(['employee-details'], { queryParams: { USERID: employee.id } });\n  }\n}\n","<div class=\"row mt-3\">\n    <div class=\"col-md-12\">\n        <button class=\"btn btn-info float-right\" (click)=\"addEmployeeShow()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add</button>\n    </div>\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone Number</th>\n                <th>Location</th>\n                <th>Profile Image</th>\n                <th>Address</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of employeeList\">\n                <td><a class=\"btn btn-link text-info\" (click)=\"getEmpDetails(item)\">{{item.name}}</a></td>\n                <td>{{item.email}}</td>\n                <td>{{item.phone}}</td>\n                <td>{{item.location}}</td>\n                <td><img src=\"{{item.image}}\" class=\"img-thumbnail\" width=\"70px\" alt=\"\"></td>\n                <td>{{item.address}}</td>\n\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-nav',\n  templateUrl: './header-nav.component.html',\n  styleUrls: ['./header-nav.component.scss']\n})\nexport class HeaderNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand primary\">\n    <div class=\"container-fluid \">\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand text-white\">PaceWisdom</a>\n        </div>\n        <ul class=\"nav navbar-nav\">\n\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <app-header-nav style=\"width: 100%;\"> </app-header-nav>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <router-outlet> </router-outlet>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>sidebar works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  getPosition(): Promise<any> {\n    return new Promise((resolve, reject) => {\n\n      navigator.geolocation.getCurrentPosition(resp => {\n\n        resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n      },\n        err => {\n          reject(err);\n        });\n    });\n\n  }\n  getEmployeeList() {\n    return this.http.get('https://5f8ac4f384531500167061ed.mockapi.io/employee/employee')\n  }\n\n  saveDetails(values) {\n    return this.http.post('https://5f8ac4f384531500167061ed.mockapi.io/employee/employee', values)\n  }\n  getEmployeeDetails(id) {\n    return this.http.get('https://5f8ac4f384531500167061ed.mockapi.io/employee/employee?id=' + id)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}